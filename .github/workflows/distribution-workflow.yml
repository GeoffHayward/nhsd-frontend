name: Distribution Workflow

on:
  push:
    branches:
      - main

jobs:

  build_dist:
    name: "Build CDN Distribution"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

      #
      # Step 1
      # Set up job (Build dist)
      #
      - name: Checkout
        uses: actions/checkout@v2

      - name: Request Node Version
        uses: actions/setup-node@v2
        with:
          node-version: '12.6.0'

      #
      # Step 2
      # Set up cache (dist)
      #
      - name: Get cache key helper values
        uses: actions/github-script@v3
        id: cache-key-helper
        with:
          result-encoding: string
          script: |
            return JSON.stringify({
              "year" : new Date().getFullYear(),
              "rotation" : new Date().getTimezoneOffset()
            })
      - name: Setup cache (Node.js packages)
        uses: actions/cache@v2
        env:
          YEAR: ${{ fromJSON(steps.cache-key-helper.outputs.result).year }}
          ROTATION: ${{ fromJSON(steps.cache-key-helper.outputs.result).rotation }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-nhs-digital-distribution-${{ env.YEAR }}-${{ env.ROTATION }}
          restore-keys: |
            ${{ runner.os }}-nhs-digital-distribution-${{ env.YEAR }}-
            ${{ runner.os }}-nhs-digital-distribution-


      #
      # Step 3
      # Install NPM packages (dist)
      #
      - name: Initialise NPM
        run: npm i

      #
      # Step 4
      #
      - name: Build dist folder
        run: npm run dist:build:prod

      #
      # Step 6
      # Store artifacts for next job
      #
      - name: Archive dist artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cdn-dist
          path: |
            dist/images/
            dist/scripts/
            dist/static/
            dist/stylesheets/


  build_storybook:
    name: "Build Storybook Distribution"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

      #
      # Step 1
      # Set up job (Storybook)
      #
      - name: Checkout
        uses: actions/checkout@v2

      - name: Request Node Version
        uses: actions/setup-node@v2
        with:
          node-version: '12.6.0'

      #
      # Step 2
      # Set up cache (Storybook)
      #
      - name: Get cache key helper values
        uses: actions/github-script@v3
        id: cache-key-helper
        with:
          result-encoding: string
          script: |
            return JSON.stringify({
              "year" : new Date().getFullYear(),
              "rotation" : new Date().getTimezoneOffset()
            })
      - name: Setup cache (Node.js packages)
        uses: actions/cache@v2
        env:
          YEAR: ${{ fromJSON(steps.cache-key-helper.outputs.result).year }}
          ROTATION: ${{ fromJSON(steps.cache-key-helper.outputs.result).rotation }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-nhs-digital-storybook-${{ env.YEAR }}-${{ env.ROTATION }}
          restore-keys: |
            ${{ runner.os }}-nhs-digital-storybook-${{ env.YEAR }}-
            ${{ runner.os }}-nhs-digital-storybook-


      #
      # Step 3
      # Install NPM packages (Storybook)
      #
      - name: Initialise NPM
        run: npm i

      #
      # Step 4
      #
      - name: Build Storybook
        run: npm run storybook:build

      #
      # Step 6
      # Store artifacts for next job
      #
      - name: Archive storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook-dist
          path: |
            storybook-static/




  tag_and_release:
    name: "Create GitHub Release"
    needs:
      - build_dist
      - build_storybook
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      #
      # Step 1
      #
      - name: Checkout
        uses: actions/checkout@v2


      #
      # Step 2
      #
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v2
        id: download
        with:
          path: workflow-artifacts

      #
      # Step 3
      #
      - name: Zip CDN distribution
        run: zip -r ../cdn-dist.zip .
        working-directory: ${{steps.download.outputs.download-path}}/cdn-dist


      #
      # Step 4
      #
      - name: Zip storybook distribution
        run: zip -r ../storybook.zip .
        working-directory: ${{steps.download.outputs.download-path}}/storybook-dist


      #
      # Step 5
      # Zip NPM package
      #


      #
      # Step 6
      # Create Release
      # - Bumps version
      # - Adds version release tag
      # - Adds dist, storybook and package to the release
      #
      - name: Version bump
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload CDN Dist Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ${{steps.download.outputs.download-path}}/cdn-dist.zip
          asset_name: cdn-dist-${{ steps.tag_version.outputs.new_tag }}.zip
          asset_content_type: application/zip

      - name: Upload Storybook Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ${{steps.download.outputs.download-path}}/storybook.zip
          asset_name: storybook-build-${{ steps.tag_version.outputs.new_tag }}.zip
          asset_content_type: application/zip
