name: Distribution Workflow

on:
  push:
    branches:
      - main

jobs:
  tag:
    name: "Verify that Storybook builds correctly"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      #
      # Step 1
      # Set up job
      #
      - name: Checkout
        uses: actions/checkout@v2

      - name: Request Node Version
        uses: actions/setup-node@v2
        with:
          node-version: '12.6.0'

      #
      # Step 2
      # Cache Management
      #
      - name: Get cache key helper values
        uses: actions/github-script@v3
        id: cache-key-helper
        with:
          result-encoding: string
          script: |
            return JSON.stringify({
              "year" : new Date().getFullYear(),
              "rotation" : new Date().getTimezoneOffset()
            })
      - name: Setup cache (Node.js packages)
        uses: actions/cache@v2
        env:
          YEAR: ${{ fromJSON(steps.cache-key-helper.outputs.result).year }}
          ROTATION: ${{ fromJSON(steps.cache-key-helper.outputs.result).rotation }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-nhs-digital-distribution-${{ env.YEAR }}-${{ env.ROTATION }}
          restore-keys: |
            ${{ runner.os }}-nhs-digital-distribution-${{ env.YEAR }}-
            ${{ runner.os }}-nhs-digital-distribution-

      #
      # Step 3
      #
      - name: Initialise NPM
        run: npm i

      #
      # Step 4
      #
      - name: Build Distribution
        run: npm run dist:build:prod

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: zip dist.zip dist/



      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist.zip
          asset_name: storybook.zip
          asset_content_type: application/zip
